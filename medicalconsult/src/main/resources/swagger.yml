openapi: 3.0.1
info:
  title: Gerenciamento de Usuários e Consultas
  version: v1
  description: API para gerenciamento de usuários e consultas.
servers:
  - url: http://localhost:8080
    description: URL do servidor local para teste

paths:
  /usuarios/{id}:
    get:
      tags:
        - Usuario
      summary: Busca um usuário pelo ID
      description: Retorna os dados de um usuário específico com base no ID fornecido.
      operationId: buscarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser consultado
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sucesso na busca do usuário
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  nome:
                    type: string
                    example: "João da Silva"
                  email:
                    type: string
                    example: "joao.silva@email.com"
        "404":
          description: Usuário não encontrado
        "500":
          description: Erro no servidor

    put:
      tags:
        - Usuario
      summary: Atualiza os dados de um usuário pelo ID
      description: Atualiza as informações de um usuário existente.
      operationId: atualizarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser atualizado
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "João da Silva"
                email:
                  type: string
                  example: "joao.silva@email.com"
      responses:
        "200":
          description: Sucesso na atualização do usuário
        "404":
          description: Usuário não encontrado
        "500":
          description: Erro no servidor

    delete:
      tags:
        - Usuario
      summary: Exclui um usuário pelo ID
      description: Remove um usuário existente com base no ID fornecido.
      operationId: deletarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser removido
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Usuário excluído com sucesso
        "404":
          description: Usuário não encontrado
        "500":
          description: Erro no servidor

  /usuarios:
    post:
      tags:
        - Usuario
      summary: Cria um novo usuário
      description: Cria um novo usuário no sistema.
      operationId: criarUsuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "João da Silva"
                email:
                  type: string
                  example: "joao.silva@email.com"
      responses:
        "201":
          description: Usuário criado com sucesso
        "400":
          description: Erro na solicitação (dados inválidos)
        "500":
          description: Erro no servidor

  /consultas/{id}:
    get:
      tags:
        - Consulta
      summary: Busca uma consulta pelo ID
      description: Retorna os dados de uma consulta específica com base no ID fornecido.
      operationId: buscarConsulta
      parameters:
        - name: id
          in: path
          required: true
          description: ID da consulta a ser consultada
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Sucesso na busca da consulta
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 1
                  data:
                    type: string
                    format: date-time
                    example: "2023-10-15T14:00:00Z"
                  paciente:
                    type: string
                    example: "João da Silva"
                  medico:
                    type: string
                    example: "Dra. Maria Souza"
                  status:
                    type: string
                    example: "Confirmada"
        "404":
          description: Consulta não encontrada
        "500":
          description: Erro no servidor

    put:
      tags:
        - Consulta
      summary: Atualiza uma consulta pelo ID
      description: Atualiza os dados de uma consulta existente com base no ID fornecido.
      operationId: atualizarConsulta
      parameters:
        - name: id
          in: path
          required: true
          description: ID da consulta a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date-time
                  example: "2023-10-15T14:00:00Z"
                paciente:
                  type: string
                  example: "João da Silva"
                medico:
                  type: string
                  example: "Dra. Maria Souza"
                status:
                  type: string
                  example: "Confirmada"
      responses:
        "200":
          description: Sucesso na atualização da consulta
        "404":
          description: Consulta não encontrada
        "500":
          description: Erro no servidor

    delete:
      tags:
        - Consulta
      summary: Exclui uma consulta pelo ID
      description: Remove uma consulta existente com base no ID fornecido.
      operationId: deletarConsulta
      parameters:
        - name: id
          in: path
          required: true
          description: ID da consulta a ser removida
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Consulta excluída com sucesso
        "404":
          description: Consulta não encontrada
        "500":
          description: Erro no servidor

  /consultas:
    post:
      tags:
        - Consulta
      summary: Cria uma nova consulta
      description: Cria uma nova consulta no sistema.
      operationId: criarConsulta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: date-time
                  example: "2023-10-15T14:00:00Z"
                paciente:
                  type: string
                  example: "João da Silva"
                medico:
                  type: string
                  example: "Dra. Maria Souza"
                status:
                  type: string
                  example: "Agendada"
      responses:
        "201":
          description: Consulta criada com sucesso
        "400":
          description: Erro na solicitação (dados inválidos)
        "500":
          description: Erro no servidor
